[{"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/SingleQuestion.js":"1","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Post.js":"2","/home/bhargav/Documents/Projects/Javascript/quora/client/src/index.js":"3","/home/bhargav/Documents/Projects/Javascript/quora/client/src/App.js":"4","/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Home.js":"5","/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/userSessionActions.js":"6","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/MainNavigation.js":"7","/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/feedReducer.js":"8","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Profile.js":"9","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SideBars/Sidebar.js":"10","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Widgets/Widgets.js":"11","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/InputOption.js":"12","/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Login.js":"13","/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/feedStatusActions.js":"14","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/LandingPage.js":"15","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SearchBar/SearchBar.js":"16","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/HeaderOption.js":"17","/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/HomeMain.js":"18","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/header.js":"19","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/login/LoginPrompt.js":"20","/home/bhargav/Documents/Projects/Javascript/quora/client/src/store.js":"21","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Create.js":"22","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Feeds.js":"23","/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/index.js":"24","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Layout.js":"25","/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/userReducer.js":"26"},{"size":9886,"mtime":1633163845313,"results":"27","hashOfConfig":"28"},{"size":1476,"mtime":1633114009456,"results":"29","hashOfConfig":"28"},{"size":434,"mtime":1610274402322,"results":"30","hashOfConfig":"28"},{"size":383,"mtime":1633352017215,"results":"31","hashOfConfig":"28"},{"size":501,"mtime":1633024675533,"results":"32","hashOfConfig":"28"},{"size":271,"mtime":1632406886348,"results":"33","hashOfConfig":"28"},{"size":1016,"mtime":1633352298297,"results":"34","hashOfConfig":"28"},{"size":170,"mtime":1632419882961,"results":"35","hashOfConfig":"28"},{"size":1757,"mtime":1633024675533,"results":"36","hashOfConfig":"28"},{"size":2546,"mtime":1633204603423,"results":"37","hashOfConfig":"28"},{"size":3004,"mtime":1633097053128,"results":"38","hashOfConfig":"28"},{"size":270,"mtime":1610274402322,"results":"39","hashOfConfig":"28"},{"size":253,"mtime":1610274402322,"results":"40","hashOfConfig":"28"},{"size":213,"mtime":1632419788965,"results":"41","hashOfConfig":"28"},{"size":1423,"mtime":1633203074738,"results":"42","hashOfConfig":"28"},{"size":3164,"mtime":1633100179760,"results":"43","hashOfConfig":"28"},{"size":439,"mtime":1610274402322,"results":"44","hashOfConfig":"28"},{"size":1647,"mtime":1633024675533,"results":"45","hashOfConfig":"28"},{"size":4709,"mtime":1632502628917,"results":"46","hashOfConfig":"28"},{"size":2281,"mtime":1610307221746,"results":"47","hashOfConfig":"28"},{"size":432,"mtime":1610274402322,"results":"48","hashOfConfig":"28"},{"size":5736,"mtime":1633024675533,"results":"49","hashOfConfig":"28"},{"size":4125,"mtime":1633198755766,"results":"50","hashOfConfig":"28"},{"size":218,"mtime":1632417899554,"results":"51","hashOfConfig":"28"},{"size":288,"mtime":1611473876925,"results":"52","hashOfConfig":"28"},{"size":751,"mtime":1632406854085,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"afakwn",{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/SingleQuestion.js",["116","117","118","119"],"import React, {useEffect, useState, useRef} from \"react\";\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Cookies from 'universal-cookie'\nimport Card from \"@mui/material/Card\";\nimport { Container, Grid, Paper, TextareaAutosize } from \"@mui/material\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faChevronUp, faChevronDown } from '@fortawesome/fontawesome-free-solid'\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nimport './Post.css'\nimport './SingleQuestion.css'\n\nconst SingleQuestion = (props) => {\n  const { AuthorEmail, content, name, tags, questionData } =\n    props.location.state;\n    const user = useSelector(state => state.user)\n\n  const { id } = useParams()\n  const [answers, setAnswers] = useState([])\n  const [initRequest, setRequestStatus] = useState(false)\n  const [upvotedAns, setUpvotedAns] = useState([])\n  const [downvotedAns, setDownvotedAns] = useState([])\n  const [originallyUpvoted, setOriginallyUpvoted] = useState([])\n  const [originallyDownvoted, setOriginallyDownvoted] = useState([])\n  const textInput = useRef(null)\n\n  const cookie = new Cookies()\n  const idToken = cookie.get('idToken')\n\n  const requestAnswers = async () => {\n    const questionId = id\n    const res = await fetch('http://localhost:5000/question_answers?id='+questionId, {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer '+idToken,\n            'Content-type': 'application/json',\n            'Accept': 'application/json'\n        }\n    })\n    const data = await res.json()\n    // Handle errors\n    const newAnswers = []\n    data.answers.forEach(answer => {\n        const ans = {\n            author: answer.author.email,\n            content: answer.content,\n            id: answer._id,\n            upvotes: answer.upvotes,\n            downvotes: answer.downvotes\n        }\n        newAnswers.push(ans)\n    });\n    setAnswers(newAnswers)\n    setUpvotedAns(data.answersUpvoted)\n    setOriginallyUpvoted(data.answersUpvoted)\n    setOriginallyDownvoted(data.answersDownvoted)\n    setDownvotedAns(data.answersDownvoted)\n    setRequestStatus(true)\n  }\n\n  const submitVotes = async (upvoteId, downvoteId) => {\n      if(upvoteId !== \"\")\n        await fetch('http://localhost:5000/upvote', {\n            method: 'PATCH',\n            headers: {\n                'Authorization': 'Bearer '+idToken,\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                email: user.email,\n                answers: [upvoteId]\n            })\n        })\n      if(downvoteId !== \"\")\n        await fetch('http://localhost:5000/downvote', {\n            method: 'PATCH',\n            headers: {\n                'Authorization': 'Bearer '+idToken,\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                email: user.email,\n                answers: [downvoteId]\n            })\n        })\n      // Handle errors\n  }\n\n  useEffect(() => {\n      if(initRequest === false)\n      {\n        requestAnswers()\n      }\n  }, [initRequest])\n\n  const submitAnswer = async content => {\n      const res = await fetch('http://localhost:5000/answer', {\n          method: 'POST',\n          headers: {\n              'Authorization': 'Bearer '+idToken,\n              'Content-type': 'application/json',\n              'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n              email: user.email,\n              question: id,\n              answer: content\n          })\n      })\n      const data = await res.json()\n      // Handle error\n      const newAnswers = [...answers]\n      newAnswers.push({\n          author: user.email,\n          content,\n          id: data.answer._id,\n          upvotes: [],\n          downvotes: []\n      })\n      setAnswers(newAnswers)\n  }\n\n  const handleSubmit = () => {\n      const content = textInput.current.value\n      if(content === \"\")\n        return\n      submitAnswer(content)\n  }\n\n  const newUpvote = async answerId => {\n    await submitVotes(answerId, \"\")\n    const upvoteArr = [...upvotedAns]\n    const downvoteArr = [...downvotedAns]\n    const idIndex = upvoteArr.indexOf(answerId)\n    if(idIndex === -1)\n        upvoteArr.push(answerId)\n    const downvoteIndex = downvoteArr.indexOf(answerId)\n    if(downvoteIndex !== -1)\n        downvoteArr.splice(downvoteIndex, 1)\n    setUpvotedAns(upvoteArr)\n    setDownvotedAns(downvoteArr)\n  }\n\n  const newDownvote = async answerId => {\n    await submitVotes(\"\", answerId)\n    const upvoteArr = [...upvotedAns]\n    const downvoteArr = [...downvotedAns]\n    const idIndex = upvoteArr.indexOf(answerId)\n    if(idIndex !== -1)\n        upvoteArr.splice(idIndex, 1)\n    const downvoteIndex = downvoteArr.indexOf(answerId)\n    if(downvoteIndex === -1)\n        downvoteArr.push(answerId)\n    setUpvotedAns(upvoteArr)\n    setDownvotedAns(downvoteArr)\n  }\n\n  return (\n    <Container>\n      <Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 650 }}>\n            <CardContent>\n            <Typography\n                sx={{ fontSize: 15 }}\n                color=\"text.primary\"\n              >\n                <b>{name}</b>\n              </Typography>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                <b>{AuthorEmail}</b>\n              </Typography>\n\n              <Typography variant=\"h5\">{content}</Typography>\n              <br />\n              <Typography variant=\"body2\">{}</Typography>\n              <div className=\"post__tags\">\n                {\n                    tags.map((tag, index) => (\n                        <a className=\"tag-ele\" href=\"https://google.com\" target=\"_blank\" key={index}>\n                            {tag}\n                        </a>\n                    ))\n                }\n            </div>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n\n        <Grid xs={12} sx={{ minWidth: 635, marginTop: 5 }}>\n          {answers.map((ans) => {\n              const upvoteStatus = upvotedAns.indexOf(ans.id)===-1?0:1\n              const downvoteStatus = downvotedAns.indexOf(ans.id)===-1?0:1\n              const originallyUpvotedStatus = originallyUpvoted.indexOf(ans.id)===-1?0:1\n              const originallyDownvotedStatus = originallyDownvoted.indexOf(ans.id)===-1?0:1\n              const originalScore = ans.upvotes.length - ans.downvotes.length\n              const scoreWithoutUser = originalScore - (originallyUpvotedStatus-originallyDownvotedStatus)\n              const score = scoreWithoutUser + upvoteStatus - downvoteStatus\n              return <Card style={{ marginBottom: 15 }}>\n                    <div className=\"answer-container\">\n                            <div className=\"vote-container\">\n                                <FontAwesomeIcon className=\"vote-icon\" icon={faChevronUp} size=\"2x\" onClick={()=>{newUpvote(ans.id)}} cursor=\"pointer\"\n                                    color={upvoteStatus === 0?\"black\":\"orange\"} \n                                />\n                                <div className=\"vote-count-container\">{score}</div>\n                                <FontAwesomeIcon className=\"vote-icon\" icon={faChevronDown} size=\"2x\" onClick={()=>{newDownvote(ans.id)}} cursor=\"pointer\"\n                                    color={downvoteStatus === 0?\"black\":\"orange\"}\n                                />\n                            </div>\n\n                            <CardContent sx={{ minHeight: 50 }}>\n                                <Typography\n                                sx={{ fontSize: 14 }}\n                                color=\"text.secondary\"\n                                gutterBottom\n                                >\n                                <b>{ans.author}</b>\n                                </Typography>\n\n                                <Typography\n                                sx={{\n                                    fontSize: 18,\n                                    display: \"inline-block\",\n                                }}\n                                color=\"text.primary\"\n                                >\n                                {ans.content}\n                                </Typography>\n                            </CardContent>\n                        </div>\n                    </Card>\n\n          })}\n        </Grid>\n\n        <Grid item>\n          <Typography variant=\"h5\" style={{ marginBottom: 5 }}>\n            Want to ans?\n          </Typography>\n          <Card style={{ marginBottom: 15 }} sx={{ minWidth: 650 }}>\n            <CardContent sx={{ minHeight: 50 }}>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n              </Typography>\n\n              <TextareaAutosize\n              ref={textInput}\n                style={{\n                  maxWidth: 600,\n                  minWidth: 600,\n                  maxHeight: 300,\n                  minHeight: 300,\n                  overflow: \"auto\",\n                }}\n              />\n            </CardContent>\n            <div style={{ marginBottom: 4 }}>\n              <Button\n                style={{\n                  textDecoration: \"none\",\n                  marginLeft: 5,\n                  marginRight: 5,\n                }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </Button>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SingleQuestion;\n",["120","121"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Post.js",["122","123","124","125","126","127"],"import { Avatar } from \"@material-ui/core\";\nimport React, { forwardRef } from \"react\";\nimport InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport { Link } from \"react-router-dom\";\nimport SingleQuestion from \"./SingleQuestion\";\n\nconst Post = ({ questionData }) => {\n  const AuthorEmail = questionData.author.email;\n  const { content, tags } = questionData;\n  const name = `${questionData.author.firstName}  ${questionData.author.lastName}`;\n\n  const id = questionData._id;\n\n  const newTo = {\n    pathname: `/singleQuestion/${id}`,\n    state: {\n      AuthorEmail: AuthorEmail,\n      content: content,\n      tags: tags,\n      name: name,\n      questionData: questionData,\n    },\n  };\n  return (\n    <Link to={newTo}>\n      <div className=\"Post\">\n        <div className=\"post__header\">\n          <Avatar />\n          <div className=\"post__info\">\n            <h2>{name}</h2>\n            <p>{AuthorEmail}</p>\n          </div>\n        </div>\n        <div className=\"post__body\">\n          {/* <p>{message}</p> */}\n          <p>{content}</p>\n        </div>\n        <div className=\"post__tags\">\n          {\n              tags.map((tag, index) => (\n                  <a className=\"tag-ele\" href=\"https://google.com\" target=\"_blank\" key={index}>{tag}</a>\n              ))\n          }\n        </div>\n      </div>\n    </Link>\n  );\n};\nexport default Post;\n",["128","129"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/index.js",[],["130","131"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/App.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Home.js",["132","133","134","135"],"import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport singleQuestion from \"../components/home/Feeds/SingleQuestion\";\nimport MainNavigation from \"../components/home/Header/MainNavigation\";\n\nimport { store } from \"../store\";\nimport SingleQuestion from \"../components/home/Feeds/SingleQuestion\";\nexport default function Home() {\n  return (\n    <div>\n      <Provider store={store}>\n        <MainNavigation />\n      </Provider>\n    </div>\n  );\n}\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/userSessionActions.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/MainNavigation.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/feedReducer.js",[],["136","137"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Profile.js",["138","139"],"import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport { Container, Grid, Paper, TextareaAutosize } from \"@mui/material\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\n\nconst Profile = () => {\n  const name = \"Akash\";\n  const email = \"ak55@iitbbs.ac.in\";\n  return (\n    <Container>\n      <Paper elevation={15} sx={{ minHeight: 750 }}>\n        <Container>\n          <TextField\n            label=\"Name\"\n            defaultValue={`${name}`}\n            InputProps={{\n              readOnly: true,\n            }}\n            fullWidth={true}\n            sx={{ marginBottom: 5, marginTop: 5 }}\n          />\n          <TextField\n            label=\"Email\"\n            defaultValue={`${email}`}\n            InputProps={{\n              readOnly: true,\n            }}\n            fullWidth={true}\n          />\n\n          <Grid container spacing={2}>\n            <Grid item md={6} sm={12}>\n              <Typography variant=\"h5\" sx={{ marginTop: 2, marginLeft: 2 }}>\n                Your Tags\n              </Typography>\n              <Card sx={{ minHeight: 400, marginTop: 2 }}></Card>\n            </Grid>\n\n            <Grid item md={6} sm={12}>\n              <Typography variant=\"h5\" sx={{ marginTop: 2, marginLeft: 2 }}>\n                Total Tags\n              </Typography>\n              <Card sx={{ minHeight: 400, marginTop: 2 }}></Card>\n            </Grid>\n            <Button variant=\"contained\" color=\"success\" sx={{ marginLeft: 3 }}>\n              Submit New Tags\n            </Button>\n          </Grid>\n        </Container>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SideBars/Sidebar.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Widgets/Widgets.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/InputOption.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Login.js",[],["140","141"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/feedStatusActions.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/LandingPage.js",["142"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SearchBar/SearchBar.js",["143","144","145","146","147","148","149"],"import React,{useState,useEffect} from 'react';\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { setToHome, setToSearch } from '../../../actions/feedStatusActions'\nimport Cookies from 'universal-cookie'\nimport \"./SearchBar.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    maxWidth: 4000\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n\n}));\n\n\nexport default function SearchBar(props) {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n\n  const [search,setSearch] = useState('');\n  const [query,setQuery] = useState(['WebD']);\n  const [question, setQuestion] = useState({})\n\n//   useEffect(()=>{console.log(query)},[query]);\n\n    const fetchQuestion = async () => {\n        const cookies = new Cookies()\n        const idToken = cookies.get('idToken')\n        const res = await fetch('http://localhost:5000/unanswered_question', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer '+idToken,\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        const data = await res.json()\n        // Handle error\n        setQuestion(data.question)\n    }\n\n    useEffect(() => {\n        if(JSON.stringify(question) === JSON.stringify({}))\n            fetchQuestion()\n    })\n  \n  const updateSearch = (e)=>{\n    setSearch(e.target.value);\n  }\n\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    const queryTags = search.split(',')\n    if(search === '')\n        dispatch(setToHome())\n    else\n        dispatch(setToSearch(queryTags))\n    setQuery(queryTags);\n   setSearch('');\n   props.activateSearch()\n   props.setSearchTags(queryTags)\n  }\n\n  return (\n    <Grid container xs={12} justify=\"space-around\"\n    style={{ minHeight: '20vh', maxWidth: '100%' }} >\n    \n      <Grid item md={3} alignItems=\"center\" >\n        {\n            JSON.stringify(question) !== JSON.stringify({})?\n            <Link to={{\n                pathname: `/singleQuestion/${question._id}`,\n                state: {\n                    AuthorEmail: question.author.email,\n                    content: question.content,\n                    tags: question.tags,\n                    name: question.author.firstName + ' ' + question.author.lastName\n                }\n            }}>\n                <Button\n                variant=\"contained\"\n                size=\"large\"\n                    color=\"default\"\n                className={classes.margin}\n                \n                >\n                    Unanswered Question\n                </Button>\n            </Link>:\n            <div />\n        }\n      </Grid>\n    </Grid>\n  );\n}\n\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/HeaderOption.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/HomeMain.js",["150","151","152"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/header.js",["153"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/login/LoginPrompt.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/store.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Create.js",["154","155","156"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Feeds.js",["157","158","159","160","161"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/index.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Layout.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/userReducer.js",[],{"ruleId":"162","severity":1,"message":"163","line":6,"column":27,"nodeType":"164","messageId":"165","endLine":6,"endColumn":32},{"ruleId":"162","severity":1,"message":"166","line":17,"column":45,"nodeType":"164","messageId":"165","endLine":17,"endColumn":57},{"ruleId":"167","severity":1,"message":"168","line":99,"column":6,"nodeType":"169","endLine":99,"endColumn":19,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":189,"column":74,"nodeType":"173","endLine":189,"endColumn":89},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"162","severity":1,"message":"178","line":2,"column":17,"nodeType":"164","messageId":"165","endLine":2,"endColumn":27},{"ruleId":"162","severity":1,"message":"179","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":19},{"ruleId":"162","severity":1,"message":"180","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":22},{"ruleId":"162","severity":1,"message":"181","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":24},{"ruleId":"162","severity":1,"message":"182","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":44,"column":68,"nodeType":"173","endLine":44,"endColumn":83},{"ruleId":"174","replacedBy":"183"},{"ruleId":"176","replacedBy":"184"},{"ruleId":"174","replacedBy":"185"},{"ruleId":"176","replacedBy":"186"},{"ruleId":"162","severity":1,"message":"187","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":33},{"ruleId":"162","severity":1,"message":"188","line":1,"column":35,"nodeType":"164","messageId":"165","endLine":1,"endColumn":40},{"ruleId":"162","severity":1,"message":"189","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"182","line":7,"column":8,"nodeType":"164","messageId":"165","endLine":7,"endColumn":22},{"ruleId":"174","replacedBy":"190"},{"ruleId":"176","replacedBy":"191"},{"ruleId":"162","severity":1,"message":"192","line":3,"column":34,"nodeType":"164","messageId":"165","endLine":3,"endColumn":50},{"ruleId":"162","severity":1,"message":"193","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":19},{"ruleId":"174","replacedBy":"194"},{"ruleId":"176","replacedBy":"195"},{"ruleId":"167","severity":1,"message":"196","line":13,"column":38,"nodeType":"169","endLine":13,"endColumn":48,"suggestions":"197"},{"ruleId":"162","severity":1,"message":"163","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":13},{"ruleId":"162","severity":1,"message":"198","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"199","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":18},{"ruleId":"162","severity":1,"message":"200","line":12,"column":8,"nodeType":"164","messageId":"165","endLine":12,"endColumn":18},{"ruleId":"162","severity":1,"message":"201","line":39,"column":10,"nodeType":"164","messageId":"165","endLine":39,"endColumn":15},{"ruleId":"162","severity":1,"message":"202","line":65,"column":9,"nodeType":"164","messageId":"165","endLine":65,"endColumn":21},{"ruleId":"162","severity":1,"message":"203","line":69,"column":9,"nodeType":"164","messageId":"165","endLine":69,"endColumn":21},{"ruleId":"162","severity":1,"message":"204","line":8,"column":21,"nodeType":"164","messageId":"165","endLine":8,"endColumn":33},{"ruleId":"162","severity":1,"message":"205","line":14,"column":9,"nodeType":"164","messageId":"165","endLine":14,"endColumn":13},{"ruleId":"167","severity":1,"message":"206","line":49,"column":6,"nodeType":"169","endLine":49,"endColumn":16,"suggestions":"207"},{"ruleId":"162","severity":1,"message":"208","line":19,"column":10,"nodeType":"164","messageId":"165","endLine":19,"endColumn":21},{"ruleId":"209","severity":1,"message":"210","line":72,"column":16,"nodeType":"211","messageId":"212","endLine":72,"endColumn":18},{"ruleId":"167","severity":1,"message":"213","line":77,"column":6,"nodeType":"169","endLine":77,"endColumn":29,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"215","line":172,"column":33,"nodeType":"211","messageId":"212","endLine":172,"endColumn":35},{"ruleId":"162","severity":1,"message":"216","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"217","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":21},{"ruleId":"162","severity":1,"message":"218","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":19},{"ruleId":"162","severity":1,"message":"204","line":7,"column":21,"nodeType":"164","messageId":"165","endLine":7,"endColumn":33},{"ruleId":"162","severity":1,"message":"219","line":31,"column":9,"nodeType":"164","messageId":"165","endLine":31,"endColumn":13},"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'questionData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestAnswers'. Either include it or remove the dependency array.","ArrayExpression",["220"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-native-reassign",["221"],"no-negated-in-lhs",["222"],"'forwardRef' is defined but never used.","'InputOption' is defined but never used.","'ThumbUpAltIcon' is defined but never used.","'ChatOutlinedIcon' is defined but never used.","'SingleQuestion' is defined but never used.",["221"],["222"],["221"],["222"],"'Router' is defined but never used.","'Route' is defined but never used.","'singleQuestion' is defined but never used.",["221"],["222"],"'TextareaAutosize' is defined but never used.","'CardContent' is defined but never used.",["221"],["222"],"React Hook useEffect has a missing dependency: 'tag'. Either include it or remove the dependency array.",["223"],"'InputBase' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'query' is assigned a value but never used.","'updateSearch' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'setToFollows' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["224"],"'ListAltIcon' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'newUser' and 'status'. Either include them or remove the dependency array.",["225"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'setToHome' is defined but never used.","'feed' is assigned a value but never used.",{"desc":"226","fix":"227"},"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [initRequest, requestAnswers]",{"range":"234","text":"235"},"Update the dependencies array to be: [tag, tagState]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, tokenSet]",{"range":"238","text":"239"},"Update the dependencies array to be: [user, result, history, status, newUser]",{"range":"240","text":"241"},[3291,3304],"[initRequest, requestAnswers]",[467,477],"[tag, tagState]",[1582,1592],"[dispatch, tokenSet]",[1905,1928],"[user, result, history, status, newUser]"]