[{"/home/bhargav/Documents/Projects/Javascript/quora/client/src/store.js":"1","/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/feedReducer.js":"2","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/header.js":"3","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/HeaderOption.js":"4","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Widgets/Widgets.js":"5","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/InputOption.js":"6","/home/bhargav/Documents/Projects/Javascript/quora/client/src/index.js":"7","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SideBars/Sidebar.js":"8","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Layout.js":"9","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/LandingPage.js":"10","/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/HomeMain.js":"11","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Feeds.js":"12","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Profile.js":"13","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Post.js":"14","/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Home.js":"15","/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/index.js":"16","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/login/LoginPrompt.js":"17","/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/userReducer.js":"18","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SearchBar/SearchBar.js":"19","/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/tagAction.js":"20","/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Login.js":"21","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Create.js":"22","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/SingleQuestion.js":"23","/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/feedStatusActions.js":"24","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/MainNavigation.js":"25","/home/bhargav/Documents/Projects/Javascript/quora/client/src/util/timeFormat.js":"26"},{"size":432,"mtime":1610274402322,"results":"27","hashOfConfig":"28"},{"size":170,"mtime":1632419882961,"results":"29","hashOfConfig":"28"},{"size":4720,"mtime":1633534111307,"results":"30","hashOfConfig":"28"},{"size":439,"mtime":1610274402322,"results":"31","hashOfConfig":"28"},{"size":3191,"mtime":1633531559344,"results":"32","hashOfConfig":"28"},{"size":270,"mtime":1610274402322,"results":"33","hashOfConfig":"28"},{"size":434,"mtime":1610274402322,"results":"34","hashOfConfig":"28"},{"size":2946,"mtime":1633358122891,"results":"35","hashOfConfig":"28"},{"size":288,"mtime":1611473876925,"results":"36","hashOfConfig":"28"},{"size":1423,"mtime":1633353438940,"results":"37","hashOfConfig":"28"},{"size":1645,"mtime":1633508387896,"results":"38","hashOfConfig":"28"},{"size":4144,"mtime":1633523887774,"results":"39","hashOfConfig":"28"},{"size":5697,"mtime":1633507792251,"results":"40","hashOfConfig":"28"},{"size":1583,"mtime":1633531585511,"results":"41","hashOfConfig":"28"},{"size":501,"mtime":1633024675533,"results":"42","hashOfConfig":"28"},{"size":506,"mtime":1633371204686,"results":"43","hashOfConfig":"28"},{"size":2284,"mtime":1633533652176,"results":"44","hashOfConfig":"28"},{"size":957,"mtime":1633371321076,"results":"45","hashOfConfig":"28"},{"size":3154,"mtime":1633533878544,"results":"46","hashOfConfig":"28"},{"size":122,"mtime":1633358238741,"results":"47","hashOfConfig":"28"},{"size":277,"mtime":1633501700514,"results":"48","hashOfConfig":"28"},{"size":7796,"mtime":1633507487312,"results":"49","hashOfConfig":"28"},{"size":9933,"mtime":1633531695116,"results":"50","hashOfConfig":"28"},{"size":213,"mtime":1632419788965,"results":"51","hashOfConfig":"28"},{"size":1010,"mtime":1633531502604,"results":"52","hashOfConfig":"28"},{"size":697,"mtime":1633531859136,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"afakwn",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bhargav/Documents/Projects/Javascript/quora/client/src/store.js",[],["117","118"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/feedReducer.js",[],["119","120"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/header.js",["121"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/HeaderOption.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Widgets/Widgets.js",["122","123"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/InputOption.js",[],["124","125"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/index.js",[],["126","127"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SideBars/Sidebar.js",[],["128","129"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Layout.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/LandingPage.js",["130"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport './LandingPage.css';\nimport Sidebar from '../SideBars/Sidebar.js';\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Feeds from '../Feeds/Feeds';\n\nexport default function LandingPage(props){\n\n    const { tag } = useParams()\n    const [tagState, setTag] = useState(undefined)\n    useEffect(() => { setTag(tag) }, [tagState])\n    \n    return(\n        <div className=\"main\" >\n             <Grid container >\n                                <Grid item xs={0} sm={2} >\n                                        <Sidebar />\n                                </Grid>\n\n                                <Grid item xs={12} sm={10}>\n                                        <div className=\"main_body\" >\n                                                <SearchBar style={{minheight:\"15vh\"}}\n                                                />       \n                                        </div>\n                                        <Feeds\n                                        page={props.page}\n                                        tag={tag}\n                                        key={props.page+tag}\n                                        />\n                                    \n                                </Grid>\n\n                        </Grid>\n        </div>\n    )\n};",["131","132"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/HomeMain.js",["133","134"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\n\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport { loginUser } from \"../actions/userSessionActions\";\nimport { setToHome } from \"../actions/feedStatusActions\";\n\nexport default function HomeMain() {\n  const dispatch = useDispatch();\n  const [isAuth, authModify] = useState(false);\n  const [tokenSet, tokenSetModify] = useState(false);\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (isAuth === false) {\n      const cookies = new Cookies();\n      const timerId = setInterval(() => {\n        const token = cookies.get(\"idToken\");\n        if (token) {\n          tokenSetModify(true);\n          clearInterval(timerId);\n        }\n      }, 100);\n    }\n  }, [isAuth]);\n  useEffect(() => {\n    const makeUserAuthRequest = async () => {\n      if (tokenSet) {\n        const token = new Cookies().get(\"idToken\");\n        tokenSetModify(false);\n        const res = await fetch(\"http://localhost:5000/googleAuth\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + token,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        });\n        const data = await res.json();\n        const { firstName, lastName, email, id, tags } = data.user;\n        dispatch(loginUser(firstName, lastName, email, id, tags));\n        dispatch(setToHome());\n        authModify(true);\n      }\n    };\n    makeUserAuthRequest();\n  }, [tokenSet]);\n  return isAuth === false ? <Login /> : <Home />;\n}\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Feeds.js",["135","136"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Profile.js",["137"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Cookies from 'universal-cookie'\nimport Card from \"@mui/material/Card\";\nimport { Container, Grid, Paper } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Loader from \"react-loader-spinner\";\n\nimport { patchTags } from '../../../actions/userSessionActions'\n\nimport \"./Profile.css\";\n\n\nconst Profile = () => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const totalTags = useSelector(state => state.tags)\n  const name = user.firstName + ' ' + user.lastName\n  const email = user.email\n  const [tags, setTags] = useState([]);\n  const [allTags, setAllTags] = useState([])\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n        if(allTags.length === 0 && tags.length === 0)\n        {\n            const initAllTags = []\n            totalTags.forEach(tag => {\n                initAllTags.push(tag._id)\n            });\n            const newAllTags = initAllTags.filter(tag => user.tags.indexOf(tag) === -1)\n            setAllTags(newAllTags)\n            setTags(user.tags)\n        }\n    }, [allTags])\n\n    const submitTags = async tags => {\n        const idToken = (new Cookies()).get('idToken')\n        const res = await fetch('http://localhost:5000/add_tags', {\n            method: 'PATCH',\n            headers: {\n                'Authorization': 'Bearer '+idToken,\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                tags\n            })\n        })\n        const data = await res.json()\n        // Handle error\n        if(!data.error)\n        {\n            dispatch(patchTags(tags))\n            setMessage('Success')\n        }\n        else\n        {\n            setMessage('Failure')\n        }\n        setLoadingStatus(false)\n    }\n\n    const handleSubmit = () => {\n        setLoadingStatus(true)\n        submitTags(tags)\n    }\n\n  const removeTags = (indexToRemove) => {\n    const tag = tags[indexToRemove]\n    setTags([...tags.filter((_, index) => index !== indexToRemove)]);\n    const newAllTags = allTags\n    newAllTags.push(tag)\n    setAllTags(newAllTags)\n  };\n\n  const addTags = (tag) => {\n      const indexToRemove = allTags.indexOf(tag)\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n    setAllTags([...allTags.filter((_, index) => index !== indexToRemove)])\n  };\n\n  return (\n    <Container>\n      <Paper elevation={15} sx={{ minHeight: 750 }}>\n        <Container>\n          <TextField\n            label=\"Name\"\n            defaultValue={`${name}`}\n            InputProps={{\n              readOnly: true,\n            }}\n            fullWidth={true}\n            sx={{ marginBottom: 5, marginTop: 5 }}\n          />\n          <TextField\n            label=\"Email\"\n            defaultValue={`${email}`}\n            InputProps={{\n              readOnly: true,\n            }}\n            fullWidth={true}\n          />\n\n          <Grid container spacing={2}>\n            <Grid item md={6} sm={12}>\n              <Typography variant=\"h5\" sx={{ marginTop: 2, marginLeft: 2 }}>\n                Subscribed tags\n              </Typography>\n              <Card sx={{ minHeight: 400, marginTop: 2, minWidth: 300 }}>\n                <ul id=\"tags\">\n                  {tags.map((tag, index) => (\n                    <li key={index} className=\"tag\">\n                      <span className=\"tag-title\">{tag}</span>\n                      <span\n                        className=\"tag-close-icon\"\n                        onClick={() => removeTags(index)}\n                      >\n                        x\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </Card>\n            </Grid>\n\n            <Grid item md={6} sm={12}>\n              <Typography variant=\"h5\" sx={{ marginTop: 2, marginLeft: 2 }}>\n                Other tags\n              </Typography>\n              <Card sx={{ minHeight: 400, marginTop: 2 }}>\n                <ul id=\"tags\">\n                  {allTags.map((tag, index) => (\n                    <li key={index} className=\"tag\">\n                      <span\n                        className=\"tag-title\"\n                        onClick={(e) => addTags(e.target.innerText)}\n                      >\n                        {tag}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </Card>\n            </Grid>\n            <div>\n            <div\n            style={{\n                color: message === \"Success\" ? \"green\" : \"red\",\n                paddingBottom: \"5px\",\n                paddingLeft: \"3em\"\n            }}\n            >\n            {message === \"Success\"\n            ? \"Tags subsribed!\"\n            : message === \"Failure\"\n            ? \"Tags not added. Please retry later!\"\n            : message}\n            </div>\n            {\n                loadingStatus === false?\n                <Button variant=\"contained\" color=\"success\" sx={{ marginLeft: 3 }} onClick={handleSubmit}>\n                Subscribe Tags\n                </Button>:\n                <Loader\n                    type=\"Oval\"\n                    color=\"#00BFFF\"\n                    height={45}\n                    width={45}\n                    visible={true}\n                />\n            }\n            </div>\n          </Grid>\n        </Container>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/Post.js",["138","139","140","141","142"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Home.js",["143","144","145","146"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/index.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/login/LoginPrompt.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/reducers/userReducer.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/SearchBar/SearchBar.js",["147","148","149","150","151","152","153"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/tagAction.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/pages/Login.js",["154"],"import React, { useEffect } from 'react'\n\nimport LoginPrompt from '../components/login/LoginPrompt'\n\nexport default function Login() {\n        \n        return (\n                <div id=\"login-section\">\n                        <LoginPrompt />\n                </div>\n        )\n}\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/Create.js",["155","156","157"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport Cookies from \"universal-cookie\";\nimport Card from \"@mui/material/Card\";\n\nimport {\n  Typography,\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  TextField,\n} from \"@material-ui/core\";\n\nimport \"./Create.css\";\nimport { useHistory } from \"react-router\";\nimport { Container } from \"@mui/material\";\n\nconst Create = () => {\n  const history = useHistory();\n\n  const newUser = useSelector((state) => state.user);\n  const totalTags = useSelector(state => {\n        const newTotalTags = []\n        state.tags.forEach(tag => {\n            newTotalTags.push(tag._id)\n        });\n        return newTotalTags\n  })\n  const [user, setUser] = useState({});\n  const [query, setquery] = useState(\"\");\n  const [result, setResult] = useState({ Finalquery: \"\", Finaltags: [] });\n  const [allTags, setAllTags] = useState([])\n  const [tags, setTags] = useState([]);\n  const [loadingQuestion, setLoader] = useState(false);\n  const [status, setStatus] = useState(\"\");\n\n  const removeAllTags = () => {\n    setTags([]);\n    setAllTags(totalTags)\n  };\n\n  const makeRequest = async () => {\n    // Make request to backend\n    const cookies = new Cookies();\n    const token = cookies.get(\"idToken\");\n    const res = await fetch(\"http://localhost:5000/question\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        question: query,\n        email: user.email,\n        tags,\n      }),\n    });\n    const data = await res.json();\n    setTimeout(() => {\n      setResult((preState) => ({\n        ...preState,\n        Finalquery: query,\n        Finaltags: tags,\n      }));\n      removeAllTags();\n      setquery(\"\");\n    }, 0);\n      setTimeout(() => {\n        if (data.error === undefined)\n        {\n            setLoader(false);\n            setStatus(\"Success\");\n        }\n        else\n            setStatus(\"Failure\");\n      }, 0);\n  };\n\n  useEffect(() => {\n      if(allTags.length === 0 && tags.length === 0)\n      {\n        const newAllTags = [...totalTags]\n        setAllTags(newAllTags)\n      }\n  }, [allTags])\n\n  useEffect(() => {\n    if (user !== {}) {\n      setUser(newUser);\n    }\n    if (status !== \"\") {\n      setTimeout(() => {\n        setStatus(\"\");\n      }, 2500);\n    }\n  }, [user, result, history]);\n\n  const handleSubmit = (e) => {\n    if (query === \"\") return;\n    e.preventDefault();\n    setLoader(true);\n    makeRequest();\n  };\n\n  const handleQuery = (e) => {\n    setquery(e.target.value);\n  };\n\n  const removeTags = (indexToRemove) => {\n    const tag = tags[indexToRemove]\n    setTags([...tags.filter((_, index) => index !== indexToRemove)]);\n    const newAllTags = allTags\n    newAllTags.push(tag)\n    setAllTags(newAllTags)\n  };\n\n  const addTags = (tag) => {\n      const indexToRemove = allTags.indexOf(tag)\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n    setAllTags([...allTags.filter((_, index) => index !== indexToRemove)])\n  };\n\n  return (\n    <Container>\n      <Paper elevation={15} sx={{ minHeight: 750 }}>\n        <Container>\n          <CssBaseline />\n\n          <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\n            Have a question?\n          </Typography>\n          <Typography variant=\"h5\" align=\"center\" component=\"h2\" gutterBottom>\n            Raise your query\n          </Typography>\n          <Typography paragraph align=\"center\">\n            Add tags to your question for better reach\n          </Typography>\n\n          <Paper style={{ padding: 16 }}>\n            <form>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                <Grid item sm={12} xs={12}>\n                  <TextField\n                    required\n                    error={query === \"\"}\n                    helperText={query === \"\" ? \"Cannot be left empty!\" : \" \"}\n                    label=\"Note\"\n                    type=\"text\"\n                    value={query}\n                    onChange={handleQuery}\n                    fullWidth\n                    autoFocus\n                    multiline\n                    placeholder=\"Ask Your Question Here\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} style={{ marginTop: 36 }}>\n                  <Grid container spacing={2}>\n                    <Grid item md={6} sm={12}>\n                      <Typography\n                        variant=\"h5\"\n                        sx={{ marginTop: 2, marginLeft: 2 }}\n                      >\n                        Question tags\n                      </Typography>\n                      <Card\n                        sx={{ minHeight: 400, marginTop: 2, minWidth: 300 }}\n                      >\n                        <ul id=\"tags\">\n                          {tags.map((tag, index) => (\n                            <li key={index} className=\"tag\">\n                              <span className=\"tag-title\">{tag}</span>\n                              <span\n                                className=\"tag-close-icon\"\n                                onClick={() => removeTags(index)}\n                              >\n                                x\n                              </span>\n                            </li>\n                          ))}\n                        </ul>\n                      </Card>\n                    </Grid>\n\n                    <Grid item md={6} sm={12}>\n                      <Typography\n                        variant=\"h5\"\n                        sx={{ marginTop: 2, marginLeft: 2 }}\n                      >\n                        Other tags\n                      </Typography>\n                      <Card sx={{ minHeight: 400, marginTop: 2 }}>\n                        <ul id=\"tags\">\n                          {allTags.map((tag, index) => (\n                            <li key={index} className=\"tag\">\n                              <span\n                                className=\"tag-title\"\n                                onClick={(e) => addTags(e.target.innerText)}\n                              >\n                                {tag}\n                              </span>\n                            </li>\n                          ))}\n                        </ul>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item style={{ marginTop: 10 }}>\n                  <div\n                    style={{\n                      color: status == \"Success\" ? \"green\" : \"red\",\n                      paddingBottom: \"5px\",\n                    }}\n                  >\n                    {status === \"Success\"\n                      ? \"Question posted successfully!\"\n                      : status === \"Failure\"\n                      ? \"Question not posted. Please retry later!\"\n                      : status}\n                  </div>\n                  {loadingQuestion === false ? (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      onClick={handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                  ) : (\n                    <Loader\n                      type=\"Oval\"\n                      color=\"#00BFFF\"\n                      height={45}\n                      width={45}\n                      visible={true}\n                    />\n                  )}\n                </Grid>\n              </Grid>\n            </form>\n          </Paper>\n        </Container>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Create;\n","/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Feeds/SingleQuestion.js",["158","159","160"],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/actions/feedStatusActions.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/components/home/Header/MainNavigation.js",[],"/home/bhargav/Documents/Projects/Javascript/quora/client/src/util/timeFormat.js",["161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":19,"column":10,"nodeType":"170","messageId":"171","endLine":19,"endColumn":21},{"ruleId":"168","severity":1,"message":"172","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":12},{"ruleId":"168","severity":1,"message":"173","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":19},{"ruleId":"162","replacedBy":"174"},{"ruleId":"164","replacedBy":"175"},{"ruleId":"162","replacedBy":"176"},{"ruleId":"164","replacedBy":"177"},{"ruleId":"162","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":13,"column":38,"nodeType":"182","endLine":13,"endColumn":48,"suggestions":"183"},{"ruleId":"162","replacedBy":"184"},{"ruleId":"164","replacedBy":"185"},{"ruleId":"168","severity":1,"message":"186","line":14,"column":9,"nodeType":"170","messageId":"171","endLine":14,"endColumn":13},{"ruleId":"180","severity":1,"message":"187","line":49,"column":6,"nodeType":"182","endLine":49,"endColumn":16,"suggestions":"188"},{"ruleId":"168","severity":1,"message":"189","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"190","line":29,"column":9,"nodeType":"170","messageId":"171","endLine":29,"endColumn":13},{"ruleId":"180","severity":1,"message":"191","line":39,"column":8,"nodeType":"182","endLine":39,"endColumn":17,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"193","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"194","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"195","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":22},{"ruleId":"168","severity":1,"message":"196","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":24},{"ruleId":"168","severity":1,"message":"197","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":22},{"ruleId":"168","severity":1,"message":"198","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":33},{"ruleId":"168","severity":1,"message":"199","line":1,"column":35,"nodeType":"170","messageId":"171","endLine":1,"endColumn":40},{"ruleId":"168","severity":1,"message":"200","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":22},{"ruleId":"168","severity":1,"message":"197","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":22},{"ruleId":"168","severity":1,"message":"201","line":9,"column":8,"nodeType":"170","messageId":"171","endLine":9,"endColumn":13},{"ruleId":"168","severity":1,"message":"202","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":17},{"ruleId":"168","severity":1,"message":"203","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":18},{"ruleId":"168","severity":1,"message":"204","line":12,"column":8,"nodeType":"170","messageId":"171","endLine":12,"endColumn":18},{"ruleId":"168","severity":1,"message":"205","line":39,"column":10,"nodeType":"170","messageId":"171","endLine":39,"endColumn":15},{"ruleId":"168","severity":1,"message":"206","line":65,"column":9,"nodeType":"170","messageId":"171","endLine":65,"endColumn":21},{"ruleId":"168","severity":1,"message":"207","line":69,"column":9,"nodeType":"170","messageId":"171","endLine":69,"endColumn":21},{"ruleId":"168","severity":1,"message":"189","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"208","line":88,"column":6,"nodeType":"182","endLine":88,"endColumn":15,"suggestions":"209"},{"ruleId":"180","severity":1,"message":"210","line":99,"column":6,"nodeType":"182","endLine":99,"endColumn":29,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":219,"column":37,"nodeType":"214","messageId":"215","endLine":219,"endColumn":39},{"ruleId":"168","severity":1,"message":"201","line":6,"column":27,"nodeType":"170","messageId":"171","endLine":6,"endColumn":32},{"ruleId":"168","severity":1,"message":"216","line":17,"column":45,"nodeType":"170","messageId":"171","endLine":17,"endColumn":57},{"ruleId":"180","severity":1,"message":"217","line":99,"column":6,"nodeType":"182","endLine":99,"endColumn":19,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":3,"column":1,"nodeType":"221","endLine":20,"endColumn":2},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],"no-unused-vars","'ListAltIcon' is defined but never used.","Identifier","unusedVar","'date' is defined but never used.","'getDateTime' is defined but never used.",["222"],["223"],["222"],["223"],["222"],["223"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tag'. Either include it or remove the dependency array.","ArrayExpression",["224"],["222"],["223"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["225"],"'useEffect' is defined but never used.","'feed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'tags.length', 'totalTags', and 'user.tags'. Either include them or remove the dependency array.",["226"],"'forwardRef' is defined but never used.","'InputOption' is defined but never used.","'ThumbUpAltIcon' is defined but never used.","'ChatOutlinedIcon' is defined but never used.","'SingleQuestion' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'singleQuestion' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'query' is assigned a value but never used.","'updateSearch' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'tags.length' and 'totalTags'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'newUser' and 'status'. Either include them or remove the dependency array.",["228"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'questionData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'requestAnswers'. Either include it or remove the dependency array.",["229"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [tag, tagState]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatch, tokenSet]",{"range":"244","text":"245"},"Update the dependencies array to be: [allTags, tags.length, totalTags, user.tags]",{"range":"246","text":"247"},"Update the dependencies array to be: [allTags, tags.length, totalTags]",{"range":"248","text":"249"},"Update the dependencies array to be: [user, result, history, status, newUser]",{"range":"250","text":"251"},"Update the dependencies array to be: [initRequest, requestAnswers]",{"range":"252","text":"253"},[467,477],"[tag, tagState]",[1580,1590],"[dispatch, tokenSet]",[1336,1345],"[allTags, tags.length, totalTags, user.tags]",[2263,2272],"[allTags, tags.length, totalTags]",[2448,2471],"[user, result, history, status, newUser]",[3322,3335],"[initRequest, requestAnswers]"]